---
import Layout from "@/layouts/Layout.astro";
import styles from "@/styles/journallayout.module.scss";
import { ArrowLeft, ArrowLeftToLine } from "lucide-astro";
import { format } from "date-fns";
import { ArrowRight } from "lucide-astro";

const { frontmatter } = Astro.props;
const {
  title,
  published,
  draft,
}: {
  title: string;
  published: Date;
  draft: boolean;
} = frontmatter;

// Pagination
const journals = await Astro.glob("../**/*.{md,mdx}");

// Sort posts by date or any other frontmatter property
journals.sort(
  (a, b) =>
    new Date(b.frontmatter.published).getTime() -
    new Date(a.frontmatter.published).getTime()
);

const currentIndex = journals.findIndex((journal) => {
  // Extract the path from the full URL, which usually includes protocol, domain, and path
  const pathFromUrl = new URL(Astro.request.url).pathname;

  // Normalize the path to ensure both URLs end with a trailing slash for a consistent comparison
  const normalizedPostUrl =
    journal.url && journal.url.endsWith("/") ? journal.url : `${journal.url}/`;
  const normalizedPathFromUrl = pathFromUrl.endsWith("/")
    ? pathFromUrl
    : `${pathFromUrl}/`;

  return normalizedPostUrl === normalizedPathFromUrl;
});
// Get previous post only if it exists
const prev = currentIndex > 0 ? journals[currentIndex - 1] : null;

// Get next post only if it exists
const next =
  currentIndex < journals.length - 1 ? journals[currentIndex + 1] : null;
---

<Layout title={frontmatter.title}>
  {
    draft ? (
      <article class={styles.prose}>
        <a href="/journals" class={styles.back}>
          <ArrowLeftToLine size={16} /> Index
        </a>
        <header class={styles.header}>
          <h1>It's not ready yet!</h1>
        </header>
        <div class="divider" />
        <p>This journal entry is not ready yet. Please check back later.</p>
      </article>
    ) : (
      <article class={styles.prose}>
        <a href="/journals" class={styles.back}>
          <ArrowLeftToLine size={16} /> Index
        </a>
        <header class={styles.header}>
          <h1>{title}</h1>
          <time
            class={styles.published}
            datetime={new Date(published).toLocaleDateString()}
          >
            Written {format(new Date(published), "MMM do yyyy")}
          </time>
        </header>
        <div class="divider" />
        <slot />
        <footer class={styles.pagination}>
          {prev ? (
            <a href={prev.url} class={styles.link}>
              <ArrowLeft class={styles.icon} />
              {prev.frontmatter.title}
            </a>
          ) : (
            <div />
          )}
          {next && (
            <a href={next.url} class={styles.link}>
              {next.frontmatter.title} <ArrowRight class={styles.icon} />
            </a>
          )}
        </footer>
      </article>
    )
  }
</Layout>
