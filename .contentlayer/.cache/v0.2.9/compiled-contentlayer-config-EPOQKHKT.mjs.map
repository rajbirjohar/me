{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["// import {\n//   defineDocumentType,\n//   defineNestedType,\n//   makeSource,\n// } from \"contentlayer/source-files\";\n// import readingTime from \"reading-time\";\n\n// const Author = defineNestedType(() => ({\n//   name: \"Author\",\n//   fields: {\n//     name: { type: \"string\", required: true },\n//     image: { type: \"string\", required: true },\n//   },\n// }));\n\n// const Article = defineDocumentType(() => ({\n//   name: \"Article\",\n//   filePathPattern: \"articles/*.mdx\",\n//   contentType: \"mdx\",\n//   fields: {\n//     title: { type: \"string\", required: true },\n//     publishedAt: { type: \"string\", required: true },\n//     description: { type: \"string\", required: true },\n//     seoDescription: { type: \"string\", required: true },\n//     category: { type: \"string\", required: true },\n//     author: {\n//       type: \"nested\",\n//       of: Author,\n//     },\n//     image: { type: \"string\", required: true },\n//   },\n//   computedFields,\n// }));\n\n// const computedFields = {\n//   readingTime: { type: \"json\", resolve: (doc) => readingTime(doc.body.raw) },\n//   wordCount: {\n//     type: \"number\",\n//     resolve: (doc) => doc.body.raw.split(/\\s+/gu).length,\n//   },\n//   slug: {\n//     type: \"string\",\n//     resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\"),\n//   },\n// };\n\n// const contentLayerConfig = makeSource({\n//   contentDirPath: \"data\",\n//   documentTypes: [Article],\n// });\n\n// export default contentLayerConfig;\n\nimport { defineDocumentType, makeSource } from \"contentlayer/source-files\";\n\nexport const Post = defineDocumentType(() => ({\n  name: \"Post\",\n  filePathPattern: `**/*.md`,\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the post\",\n      required: true,\n    },\n    date: {\n      type: \"date\",\n      description: \"The date of the post\",\n      required: true,\n    },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (post) => `/posts/${post._raw.flattenedPath}`,\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: \"posts\",\n  documentTypes: [Post],\n});\n"],
  "mappings": ";AAqDA,SAAS,oBAAoB,kBAAkB;AAExC,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,UAAU,KAAK,KAAK;AAAA,IACzC;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AACtB,CAAC;",
  "names": []
}
